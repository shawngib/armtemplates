{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "siteName": {
            "type": "string",
            "metadata": {
                "description": "The name of the web app that you wish to create."
            }
        },
        "hostingPlanName": {
            "type": "string",
            "defaultValue": "[concat(parameters('siteName'), 'Hosting')]",
            "metadata": {
                "description": "The name of the App Service plan to use for hosting the web app."
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "F1",
            "allowedValues": [
              "F1",
              "D1",
              "B1",
              "B2",
              "B3",
              "S1",
              "S2",
              "S3",
              "P1",
              "P2",
              "P3",
              "P4"
            ],
            "metadata": {
              "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            }
          },
          "skuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "metadata": {
              "description": "Describes plan's instance count"
            }
          },
          "sqlAdministratorLogin": {
            "type": "string",
            "metadata": {
              "description": "The admin user of the SQL Server"
            }
          },
          "sqlAdministratorLoginPassword": {
            "type": "securestring",
            "metadata": {
              "description": "The password of the admin user of the SQL Server"
                }
            },
            "appInsightsName": {
                "type": "string",
                "defaultValue": "[concat(parameters('siteName'), 'Insights')]",
                "metadata": {
                    "description": "App insights container name."
                }
            },
            "appInsightsLocation": {
                "type": "string",
                "defaultValue": "East US",
                "metadata": {
                    "description": "Region where app insights services reside. Not available in every region."
                }
            },
            "repoUrl": {
                "type": "string",
                "defaultValue": "https://github.com/shawngib/contosouniversity.git",
                "metadata": {
                    "description": "Remote Git repo url"
                }
            },
            "appRepoBranch": {
                "type": "string",
                "defaultValue": "master",
                "metadata": {
                    "description": "Remote Git repo branch"
                }
            },
            "environment": {
                "type": "string",
                "metadata": {
                    "description": "Environment name"
                }
            },
            "tests": {
              "type": "array",
              "metadata": {
                "description": "The list of web tests to run."
              }
            }
        },
    "variables": {
        "hostingPlanResourceId": "[resourceId('Microsoft.Web/serverFarms',parameters('hostingPlanName'))]",
        "webAppResourceId": "[resourceId('Microsoft.Web/Sites', parameters('siteName'))]",
        "appInsightsResourceId": "[resourceId('microsoft.insights/components/', parameters('appInsightsName'))]",
        "sqlserverName": "[concat('sqlserver1', uniqueString(resourceGroup().id))]",
        "databaseName": "[parameters('siteName')]"
    },
    "resources": [
        {
            "name": "[variables('sqlserverName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[resourceGroup().location]",
            "tags": {
              "displayName": "SqlServer"
            },
            "apiVersion": "2014-04-01",
            "properties": {
              "administratorLogin": "[parameters('sqlAdministratorLogin')]",
              "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
              "version": "12.0"
            },
            "resources": [
              {
                "name": "[variables('databaseName')]",
                "type": "databases",
                "location": "[resourceGroup().location]",
                "tags": {
                  "displayName": "Database"
                },
                "apiVersion": "2015-01-01",
                "dependsOn": [
                  "[variables('sqlserverName')]"
                ],
                "properties": {
                  "edition": "Basic",
                  "collation": "SQL_Latin1_General_CP1_CI_AS",
                  "maxSizeBytes": "1073741824",
                  "requestedServiceObjectiveName": "Basic"
                }
              },
              {
                "type": "firewallrules",
                "apiVersion": "2014-04-01",
                "dependsOn": [
                  "[variables('sqlserverName')]"
                ],
                "location": "[resourceGroup().location]",
                "name": "AllowAllWindowsAzureIps",
                "properties": {
                  "endIpAddress": "0.0.0.0",
                  "startIpAddress": "0.0.0.0"
                }
              }
            ]
          },
          {
              "name": "[parameters('tests')[0].name]",
              "apiVersion": "2015-05-01",
              "type": "microsoft.insights/webtests",
              "location": "[resourceGroup().location]",
              "tags": {
                "[concat('hidden-link:', resourceId('microsoft.insights/components/', parameters('appInsightsName')))]": "Resource"
              },
              "dependsOn": [
                "[concat('microsoft.insights/components/', parameters('appInsightsName'))]"
              ],
              "properties": {
                "Name": "[parameters('tests')[0].name]",
                "Description": "[parameters('tests')[0].description]",
                "Enabled": true,
                "Frequency": "[parameters('tests')[0].frequency_secs]",
                "Timeout": "[parameters('tests')[0].timeout_secs]",
                "Kind": "ping",
                "Locations": "[parameters('tests')[0].locations]",
                "Configuration": {
                  "WebTest": "[concat('<WebTest Name=\"', parameters('tests')[0].name, '\"',  ' Id=\"', parameters('tests')[0].guid ,'\"    Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"0\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\">        <Items>        <Request Method=\"GET\" Guid=\"a5f10126-e4cd-570d-961c-cea43999a200\" Version=\"1.1\" Url=\"http://', reference(concat('Microsoft.Web/sites/', parameters('siteName'))).hostnames[0] ,'\" ThinkTime=\"0\" Timeout=\"300\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"', parameters('tests')[0].expected ,'\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" /></Items></WebTest>')]"
                },
                "SyntheticMonitorId": "[parameters('tests')[0].name]"
              }
            },
        {
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCapacity')]"
            },
            "kind": "app",
            "name": "[parameters('hostingPlanName')]",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "name": "[parameters('hostingPlanName')]",
                "workerTierName": null,
                "adminSiteName": null,
                "hostingEnvironmentProfile": null,
                "perSiteScaling": false,
                "reserved": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "tags": {
                "environment": "[parameters('environment')]"
            },
            "dependsOn": []
        },
        {
            "type": "microsoft.insights/components",
            "kind": "web",
            "name": "[parameters('appInsightsName')]",
            "apiVersion": "2014-04-01",
            "location": "[parameters('appInsightsLocation')]",
            "properties": {
                "ApplicationId": "[parameters('appInsightsName')]"
            },
            "tags": {
                "environment": "[parameters('environment')]",
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]": "Resource",
                "displayName": "AppInsightsComponent"
            },
            "dependsOn": []
        },
        {
            "apiVersion": "2015-08-01",
            "name": "[parameters('siteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[parameters('siteName')]",
                "serverFarmId": "[variables('hostingPlanResourceId')]",
                "hostingEnvironmentProfile": null
            },
            "tags": {
                "environment": "[parameters('environment')]"
            },
            "dependsOn": [
                "[variables('hostingPlanResourceId')]",
                "[variables('appInsightsResourceId')]"
            ],            
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "appsettings",
                    "type": "config",
                    "dependsOn": [
                      "[variables('webAppResourceId')]",
                      "Microsoft.ApplicationInsights.AzureWebSites"
                    ],
                    "properties": {
                      "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(variables('appInsightsResourceId')).InstrumentationKey]",
                      "EnvironmentName": "[parameters('environment')]"
                    }
                },
                {
                  "apiVersion": "2016-03-01",
                  "type": "config",
                  "name": "connectionstrings",
                  "dependsOn": [
                    "[parameters('siteName')]",
                    "Microsoft.ApplicationInsights.AzureWebSites"
                  ],
                  "properties": {
                    "SchoolContext": {
                      "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('databaseName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorLoginPassword'), ';')]",
                      "type": "SQLAzure"
                    }
                  }
                },
                {
                    "apiVersion": "2015-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[variables('webAppResourceId')]"
                    ],
                    "properties": {
                        "RepoUrl": "[parameters('repoUrl')]",
                        "branch": "[parameters('appRepoBranch')]",
                        "isManualIntegration": true
                    }
                },
                {
                    "apiVersion": "2014-04-01",
                    "name": "Microsoft.ApplicationInsights.AzureWebSites",
                    "type": "siteextensions",
                    "dependsOn": [
                      "[variables('webAppResourceId')]",
                      "[resourceId('Microsoft.Web/sites/sourcecontrols', parameters('siteName'), 'web')]"
                    ],
                    "properties": { }
                  }
            ]
        }
    ],
    "outputs": {
        "siteUri": {
          "type": "string",
          "value": "[reference(concat('Microsoft.Web/sites/', parameters('siteName'))).hostnames[0]]"
        },
        "sqlSvrFqdn": {
          "type": "string",
          "value": "[reference(concat('Microsoft.Sql/servers/', variables('sqlserverName'))).fullyQualifiedDomainName]"
        }
      }
}